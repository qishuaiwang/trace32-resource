; Create by Ken.Kuang Aug. 2015
&TL420_SEL=0 ; 0: LDSP , 1: TDSP, 2: AGDSP
&JTAG_SEL=0 ; 0: DAP, 1: AUD-JTAG , 2 :DSP-JTAG

&AON_BASE=0x40000000 ; AP: 0x40000000  , PUBCP: 0x02000000

&SET=0x1000
&CLR=0x2000
&SLEEP_CTRL=0x002B00E8
&SYS_SOFT_RST=0x002B00C4

&CP_ARM_JTAG_CTRL=0x002E0034

&MEM_TYPE="ZSD"
;&MEM_TYPE="EZAXI"

GOSUB PREPARE_FOR_MP8
GOSUB PREPARE_FOR_PUBCP
GOSUB PREPARE_FOR_CM3
GOSUB PREPARE_FOR_DSP_JTAG
GOSUB PREPARE_FOR_DSP

GOSUB RELEASE_FOR_CM3
GOSUB RELEASE_FOR_DSP
GOSUB RELEASE_FOR_PUBCP
GOSUB RELEASE_FOR_MP8

ENDDO

;################################### MP8 BOOT ########################

PREPARE_FOR_MP8:
	&CODE_BASE=0x40880034
	&MP8_BOOT=0x1000
	D.S &MEM_TYPE:&CODE_BASE %LE %Long (&MP8_BOOT>>8.)
	&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long (&MP8_BOOT>>8.)
	&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long (&MP8_BOOT>>8.)
	&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long (&MP8_BOOT>>8.)
	&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long (&MP8_BOOT>>8.)
	&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long (&MP8_BOOT>>8.)
	&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long (&MP8_BOOT>>8.)
	&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long (&MP8_BOOT>>8.)
	&CODE_BASE=(&CODE_BASE+4)

	D.S &MEM_TYPE:0x00001000 %LE %Long 0x14000000
	RETURN

RELEASE_FOR_MP8:
	; PMU FOREC RELEASE
	D.S &MEM_TYPE:(0x402B0010+&CLR) %LE %Long (1<<25.)
	D.S &MEM_TYPE:(0x402B0014+&CLR) %LE %Long (1<<25.)
	D.S &MEM_TYPE:(0x402B0018+&CLR) %LE %Long (1<<25.)
	; BIG
	D.S &MEM_TYPE:(0x402B001C+&CLR) %LE %Long (1<<25.)
	D.S &MEM_TYPE:(0x402B0020+&CLR) %LE %Long (1<<25.)
	D.S &MEM_TYPE:(0x402B0024+&CLR) %LE %Long (1<<25.)
	D.S &MEM_TYPE:(0x402B0028+&CLR) %LE %Long (1<<25.)
	D.S &MEM_TYPE:(0x402B002C+&CLR) %LE %Long (1<<25.)
	RETURN

;################################### PUBCP BOOT ########################
PREPARE_FOR_PUBCP:
	; !!! FOR TGDSP FREQ. UP
	; 0: 26MHz
	; 1: 256MHz
	; 2: 307.2MHz
	; 3: 384MHz
	; 4: 512MHz
	; 5: 614.4MHz
	&CODE_BASE=0x0001A000
	;D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xE59F1008
	;&CODE_BASE=(&CODE_BASE+4)
	;D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xE59F0008
	;&CODE_BASE=(&CODE_BASE+4)
	;D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xE5801000
	;&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xEAFFFFFE
	&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 5
	&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0x515D0020
	&CODE_BASE=(&CODE_BASE+4)
	; PMU DEEPSLEEP RELEASE PUBCP
	D.S &MEM_TYPE:(&AON_BASE+&SLEEP_CTRL+&CLR) %LE %Long ((1<<26.)|(1<<19.))

	; PMU FOREC RELEASE
	D.S &MEM_TYPE:(0x402B0084+&CLR) %LE %Long (1<<25.)

	; PMU RESET RELEASE
	D.S &MEM_TYPE:(&AON_BASE+&SYS_SOFT_RST+&SET) %LE %Long (1<<2.)
	D.S &MEM_TYPE:(0x402E0174+&SET) %LE %Long ((1<<10.)|(1<<4.))
	WAIT 500.MS
	D.S &MEM_TYPE:(&AON_BASE+&SYS_SOFT_RST+&CLR) %LE %Long (1<<2.)
	RETURN

RELEASE_FOR_PUBCP:
	; AON PUBCP CORE RESET RELEASE
	D.S &MEM_TYPE:(0x402E0174+&CLR) %LE %Long ((1<<10.)|(1<<4.))
	RETURN


;################################### CM3 BOOT ########################
PREPARE_FOR_CM3:
	; PMU DEEPSLEEP RELEASE CM3
	D.S &MEM_TYPE:(&AON_BASE+&SLEEP_CTRL+&CLR) %LE %Long (1<<23.)

	; PMU RESET RELEASE
	D.S &MEM_TYPE:(&AON_BASE+&SYS_SOFT_RST+&SET) %LE %Long (1<<21.)
	D.S &MEM_TYPE:(&AON_BASE+&SYS_SOFT_RST+&SET) %LE %Long (1<<1.)
	WAIT 500.MS
	D.S &MEM_TYPE:(&AON_BASE+&SYS_SOFT_RST+&CLR) %LE %Long (1<<21.)

	D.S &MEM_TYPE:0x00020000 %LE %Long 0xE7FEE7FE ; 0xE7FE is While(1);
	D.S &MEM_TYPE:0x00020004 %LE %Long 0x00000001 ; the first code address
	RETURN

RELEASE_FOR_CM3:
	; PMU RESET RELEASE CM3 CORE
	D.S &MEM_TYPE:(&AON_BASE+&SYS_SOFT_RST+&CLR) %LE %Long (1<<1.)
	RETURN


;################################### DSP BOOT ########################
PREPARE_FOR_DSP_JTAG:
	D.S &MEM_TYPE:(&AON_BASE+&CP_ARM_JTAG_CTRL+&CLR) %LE %Long 0x00000007

	IF &JTAG_SEL==0
	(; 0: DAP
		; DAP -- ALL TL420
		D.S &MEM_TYPE:(&AON_BASE+&CP_ARM_JTAG_CTRL+&SET) %LE %Long 0x00000007
	)
	ELSE IF &JTAG_SEL==1
	(; 1: AUD-JTAG
		; AUD-JTAG PIN SEL Function3
		&CODE_BASE=0x402A0304
		D.S &MEM_TYPE:&CODE_BASE %LE %Long (0x00000020|(Data.LONG(&MEM_TYPE:&CODE_BASE)&0xFFFFFFCF))
		&CODE_BASE=(&CODE_BASE+0x4)
		D.S &MEM_TYPE:&CODE_BASE %LE %Long (0x00000020|(Data.LONG(&MEM_TYPE:&CODE_BASE)&0xFFFFFFCF))
		&CODE_BASE=(&CODE_BASE+0x4)
		D.S &MEM_TYPE:&CODE_BASE %LE %Long (0x00000020|(Data.LONG(&MEM_TYPE:&CODE_BASE)&0xFFFFFFCF))
		&CODE_BASE=(&CODE_BASE+0x4)
		D.S &MEM_TYPE:&CODE_BASE %LE %Long (0x00000020|(Data.LONG(&MEM_TYPE:&CODE_BASE)&0xFFFFFFCF))
		&CODE_BASE=(&CODE_BASE+0x4)
		D.S &MEM_TYPE:&CODE_BASE %LE %Long (0x00000020|(Data.LONG(&MEM_TYPE:&CODE_BASE)&0xFFFFFFCF))
	)
	ELSE IF &JTAG_SEL==2
	(; 2 :DSP-JTAG
		; DSP-JTAG PIN SEL Function2
		&CODE_BASE=0x402A02F0
		D.S &MEM_TYPE:&CODE_BASE %LE %Long (0x00000010|(Data.LONG(&MEM_TYPE:&CODE_BASE)&0xFFFFFFCF))
		&CODE_BASE=(&CODE_BASE+0x4)
		D.S &MEM_TYPE:&CODE_BASE %LE %Long (0x00000010|(Data.LONG(&MEM_TYPE:&CODE_BASE)&0xFFFFFFCF))
		&CODE_BASE=(&CODE_BASE+0x4)
		D.S &MEM_TYPE:&CODE_BASE %LE %Long (0x00000010|(Data.LONG(&MEM_TYPE:&CODE_BASE)&0xFFFFFFCF))
		&CODE_BASE=(&CODE_BASE+0x4)
		D.S &MEM_TYPE:&CODE_BASE %LE %Long (0x00000010|(Data.LONG(&MEM_TYPE:&CODE_BASE)&0xFFFFFFCF))
		&CODE_BASE=(&CODE_BASE+0x4)
		D.S &MEM_TYPE:&CODE_BASE %LE %Long (0x00000010|(Data.LONG(&MEM_TYPE:&CODE_BASE)&0xFFFFFFCF))
	)

	IF &TL420_SEL==0
	(; 0: LDSP 
		IF &JTAG_SEL==1
		(
			PRINT %ERROR "Can't Select AUD-JTAG"
			ENDDO
		)
		ELSE IF &JTAG_SEL==2
		(
			; DSP-JTAG to JTAG_LDSP
			D.S &MEM_TYPE:(&AON_BASE+&CP_ARM_JTAG_CTRL+&SET) %LE %Long 0x00000000
		)
	)
	ELSE IF &TL420_SEL==1
	(; 1: TDSP
		IF &JTAG_SEL==1
		(
			PRINT %ERROR "Can't Select AUD-JTAG"
			ENDDO
		)
		ELSE IF &JTAG_SEL==2
		(
			; DSP-JTAG to JTAG_TDSP
			D.S &MEM_TYPE:(&AON_BASE+&CP_ARM_JTAG_CTRL+&SET) %LE %Long 0x00000001
		)
	)
	ELSE IF &TL420_SEL==2
	(; 2: AGDSP

		IF &JTAG_SEL==1
		(
			; AUD-JTAG to JTAG_AGDSP
			D.S &MEM_TYPE:(&AON_BASE+&CP_ARM_JTAG_CTRL+&SET) %LE %Long 0x00000000
		)
		ELSE IF &JTAG_SEL==2
		(
			; DSP-JTAG to JTAG_AGDSP
			D.S &MEM_TYPE:(&AON_BASE+&CP_ARM_JTAG_CTRL+&SET) %LE %Long 0x00000006
		)
	)
	RETURN

PREPARE_FOR_DSP:
	D.S &MEM_TYPE:0x0001B800++0x2FF %LE %Long 0
;----------------------------------------------------------------------
; 0: LDSP
	&OFFSET=0x000
	&CODE_BASE=(0x0001B800+&OFFSET)
	&DSP_BASE=(0x30000000+&OFFSET)
	; 0: 26MHz
	; 1: 256MHz
	; 2: 307.2MHz
	; 3: 384MHz
	; 4: 512MHz
	; 5: 614.4MHz
	;; mov ##data, r0
	;D.S &MEM_TYPE:&CODE_BASE %LE %Long 5 ;data value
	;&CODE_BASE=(&CODE_BASE+4)
	;D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xd7e67300
	;&CODE_BASE=(&CODE_BASE+4)
	;; st r0, [##reg].dw
	;D.S &MEM_TYPE:&CODE_BASE %LE %Long (0x015D0020/2) ; register address
	;&CODE_BASE=(&CODE_BASE+4)
	;D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xd7e6db00 
	;&CODE_BASE=(&CODE_BASE+4)

	; mov ##data, r0
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xAAAAAAAA ;data value
	&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xd7e67300
	&CODE_BASE=(&CODE_BASE+4)
	; st r0, [##reg].dw
	D.S &MEM_TYPE:&CODE_BASE %LE %Long ((&DSP_BASE+0x80)/2) ; register address
	&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xd7e6db00 
	&CODE_BASE=(&CODE_BASE+4)
	; L2: brr L2
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xfffffffc ; 0xd7ee1320
	&CODE_BASE=(&CODE_BASE+0x4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xd7ee1320 ; 0xfffffffc while(1)
	&CODE_BASE=(&CODE_BASE+0x4)
	
	;!!!RPLL0 WTL SEL!!!
	D.S &MEM_TYPE:(0x402B016C+&SET) %LE %Long (1<<4.)

	; Clear LDSP Prot
	D.S &MEM_TYPE:0x402E007C %LE %Long 0x00009620
	; LDSP BOOT FROM P-RAM
	D.S &MEM_TYPE:(0x402E0154+&CLR) %LE %Long (1<<0.)
	; LDSP BOOT FROM DSP_BASE
	D.S &MEM_TYPE:0x402E0150 %LE %Long ((&DSP_BASE)/2)
	D.S &MEM_TYPE:(0x402E0154+&SET) %LE %Long (1<<0.)

	; PMU FOREC RELEASE
	D.S &MEM_TYPE:(0x402B0058+&CLR) %LE %Long (1<<25.)
	D.S &MEM_TYPE:(0x402B0060+&CLR) %LE %Long (1<<25.)

	; PMU RESET RELEASE
	D.S &MEM_TYPE:(&AON_BASE+&SYS_SOFT_RST+&SET) %LE %Long ((1<<31.)|(1<<27.)|(1<<22.))
	WAIT 500.MS
	D.S &MEM_TYPE:(&AON_BASE+&SYS_SOFT_RST+&CLR) %LE %Long ((1<<31.)|(1<<27.)|(1<<22.))

	; PMU DEEPSLEEP RELEASE
	D.S &MEM_TYPE:(&AON_BASE+&SLEEP_CTRL+&CLR) %LE %Long ((1<<27.)|(1<<20.))


;----------------------------------------------------------------------
;  1: TDSP
	&OFFSET=0x100
	&CODE_BASE=(0x0001B800+&OFFSET)
	&DSP_BASE=(0x30000000+&OFFSET)
	; 0: 26MHz
	; 1: 256MHz
	; 2: 307.2MHz
	; 3: 384MHz
	; 4: 512MHz
	; 5: 614.4MHz
	; mov ##data, r0
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 5 ;data value
	&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xd7e67300
	&CODE_BASE=(&CODE_BASE+4)
	; st r0, [##reg].dw
	D.S &MEM_TYPE:&CODE_BASE %LE %Long (0x015D0020/2) ; register address
	&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xd7e6db00 
	&CODE_BASE=(&CODE_BASE+4)

	; mov ##data, r0
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xAAAAAAAA ;data value
	&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xd7e67300
	&CODE_BASE=(&CODE_BASE+4)
	; st r0, [##reg].dw
	D.S &MEM_TYPE:&CODE_BASE %LE %Long ((&DSP_BASE+0x80)/2) ; register address
	&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xd7e6db00 
	&CODE_BASE=(&CODE_BASE+4)
	; L2: brr L2
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xfffffffc ; 0xd7ee1320
	&CODE_BASE=(&CODE_BASE+0x4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xd7ee1320 ; 0xfffffffc while(1)
	&CODE_BASE=(&CODE_BASE+0x4)

	; Clear LDSP Prot
	D.S &MEM_TYPE:0x402E007C %LE %Long 0x00009620
	; TDSP BOOT FROM P-RAM
	D.S &MEM_TYPE:(0x402E015C+&CLR) %LE %Long (1<<0.)
	; TDSP BOOT FROM DSP_BASE
	D.S &MEM_TYPE:0x402E0158 %LE %Long (&DSP_BASE/2)
	D.S &MEM_TYPE:(0x402E015C+&SET) %LE %Long (1<<0.)

	; PMU FOREC RELEASE
	D.S &MEM_TYPE:(0x402B0058+&CLR) %LE %Long (1<<25.)
	D.S &MEM_TYPE:(0x402B005C+&CLR) %LE %Long (1<<25.)

	; PMU RESET RELEASE
	D.S &MEM_TYPE:(&AON_BASE+&SYS_SOFT_RST+&SET) %LE %Long ((1<<31.)|(1<<30.)|(1<<27.)|(1<<22.))
	WAIT 500.MS
	D.S &MEM_TYPE:(&AON_BASE+&SYS_SOFT_RST+&CLR) %LE %Long ((1<<31.)|(1<<30.)|(1<<27.)|(1<<22.))

	; PMU DEEPSLEEP RELEASE
	D.S &MEM_TYPE:(&AON_BASE+&SLEEP_CTRL+&CLR) %LE %Long ((1<<27.)|(1<<20.))


;----------------------------------------------------------------------
; 2: AGDSP
	&OFFSET=0x200
	&CODE_BASE=(0x0001B800+&OFFSET)
	&DSP_BASE=(0x30000000+&OFFSET)
	; mov ##data, r0
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xAAAAAAAA ;data value
	&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xd7e67300
	&CODE_BASE=(&CODE_BASE+4)
	; st r0, [##reg].dw
	D.S &MEM_TYPE:&CODE_BASE %LE %Long ((&DSP_BASE+0x80)/2) ; register address
	&CODE_BASE=(&CODE_BASE+4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xd7e6db00 
	&CODE_BASE=(&CODE_BASE+4)
	; L2: brr L2
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xfffffffc ; 0xd7ee1320
	&CODE_BASE=(&CODE_BASE+0x4)
	D.S &MEM_TYPE:&CODE_BASE %LE %Long 0xd7ee1320 ; 0xfffffffc while(1)
	&CODE_BASE=(&CODE_BASE+0x4)

	; Clear AGDSP Prot
	D.S &MEM_TYPE:0x402E0078 %LE %Long 0x00009620
	; AGDSP BOOT FROM P-RAM
	D.S &MEM_TYPE:(0x402E0144+&CLR) %LE %Long (1<<0.)
	; AGDSP BOOT FROM DSP_BASE
	D.S &MEM_TYPE:0x402E0140 %LE %Long (&DSP_BASE/2)
	D.S &MEM_TYPE:(0x402E0144+&SET) %LE %Long (1<<0.)
	; PMU FOREC RELEASE
	D.S &MEM_TYPE:(0x402B0078+&CLR) %LE %Long (1<<25.)
	D.S &MEM_TYPE:(0x402B007C+&CLR) %LE %Long (1<<25.)

	; PMU RESET RELEASE
	D.S &MEM_TYPE:(&AON_BASE+&SYS_SOFT_RST+&SET) %LE %Long ((1<<29.)|(1<<28.))
	WAIT 500.MS
	D.S &MEM_TYPE:(&AON_BASE+&SYS_SOFT_RST+&CLR) %LE %Long ((1<<29.)|(1<<28.))

	; PMU DEEPSLEEP RELEASE
	D.S &MEM_TYPE:(&AON_BASE+&SLEEP_CTRL+&CLR) %LE %Long ((1<<28.)|(1<<21.))

	RETURN

RELEASE_FOR_DSP:
	; AON LDSP CORE RESET RELEASE
	D.S &MEM_TYPE:(0x402E0160+&CLR) %LE %Long (1<<0.)
	; AON TDSP CORE RESET RELEASE
	D.S &MEM_TYPE:(0x402E0160+&CLR) %LE %Long (1<<1.)
	; AON AGDSP CORE RESET RELEASE
	D.S &MEM_TYPE:(0x402E0148+&CLR) %LE %Long ((1<<1.)|(1<<0.))
	RETURN

