LOCAL &MEM_TYPE
IF (CPUFAMILY()=="ARM")
(
	&MEM_TYPE="EAHB"
	;SYStem.Mode Prepare
)
ELSE IF (CPUFAMILY()=="I386")
(
	&MEM_TYPE="AND"
	;SYStem.Mode Attach
	;Break
)

LOCAL &IS_RUN

GOSUB DETECT_CORE_IS_RUNING 0xE5000030 0xFAF5A5A5 0xE5000040 0xA5A5FAF5
ENTRY &IS_RUN
IF (&IS_RUN!=1)
(
	;GOSUB SET_WHILE_1 0xE5000000
	GOSUB SET_DETECT_CORE_IS_RUNING 0xE5000000 0x30 0xFAF5A5A5 0x40 0xA5A5FAF5
	;release reset cp0
	D.S &MEM_TYPE:0xE42B20CC %LE %LONG 0x00020000
	D.S &MEM_TYPE:0xE42B10B0 %LE %LONG 0x00000001
	WAIT 1.MS
	D.S &MEM_TYPE:0xE42B20B0 %LE %LONG 0x00000001
	WAIT 5.MS
	GOSUB DETECT_CORE_IS_RUNING 0xE5000030 0xFAF5A5A5 0xE5000040 0xA5A5FAF5
	ENTRY &IS_RUN
	IF (&IS_RUN==1)
	(
		PRINT "CP0 Running"
	)
	ELSE
	(
		PRINT "CP0 Maybe NOT Running"
	)
)
ELSE
(
	PRINT "CP0 already Running"
)

GOSUB DETECT_CORE_IS_RUNING 0xE5001030 0xFAF5A5A5 0xE5001040 0xA5A5FAF5
ENTRY &IS_RUN
IF (&IS_RUN!=1)
(
	;GOSUB SET_WHILE_1 0xE5001000
	GOSUB SET_DETECT_CORE_IS_RUNING 0xE5001000 0x30 0xFAF5A5A5 0x40 0xA5A5FAF5
	;release reset cp1
	D.S &MEM_TYPE:0xE42E200C %LE %LONG 0x00100000
	D.S &MEM_TYPE:0xE42B20CC %LE %LONG 0x00040000
	D.S &MEM_TYPE:0xE42B10B0 %LE %LONG 0x00000002
	WAIT 1.MS
	D.S &MEM_TYPE:0xE42B20B0 %LE %LONG 0x00000002
	WAIT 5.MS
	GOSUB DETECT_CORE_IS_RUNING 0xE5001030 0xFAF5A5A5 0xE5001040 0xA5A5FAF5
	ENTRY &IS_RUN
	IF (&IS_RUN==1)
	(
		PRINT "CP1 Running"
	)
	ELSE
	(
		PRINT "CP1 Maybe NOT Running"
	)
)
ELSE
(
	PRINT "CP1 already Running"
)

;release reset ARM7
; BIT4 ARM7 SYS SOFT RESET
; BIT0 ARM7 CORE SOFT RESET
; release ARM7 sys soft reset
D.S &MEM_TYPE:0xE42E2114 %LE %LONG 0x00000010
; BIT21 ARM7 FORCE DEEPSLEEP
D.S &MEM_TYPE:0xE42B20CC %LE %LONG 0x00200000
; BIT8 ARM7 SOFT RESET
D.S &MEM_TYPE:0xE42B20B0 %LE %LONG 0x00000100
GOSUB DETECT_CORE_IS_RUNING 0xE5800030 0xFAF5A5A5 0xE5800040 0xA5A5FAF5
ENTRY &IS_RUN
IF (&IS_RUN!=1)
(
	;GOSUB SET_WHILE_1 0xE5800000
	GOSUB SET_DETECT_CORE_IS_RUNING 0xE5800000 0x30 0xFAF5A5A5 0x40 0xA5A5FAF5
	D.S &MEM_TYPE:0xE42E1114 %LE %LONG 0x00000001
	WAIT 1.MS
	D.S &MEM_TYPE:0xE42E2114 %LE %LONG 0x00000001
	WAIT 5.MS
	GOSUB DETECT_CORE_IS_RUNING 0xE5800030 0xFAF5A5A5 0xE5800040 0xA5A5FAF5
	ENTRY &IS_RUN
	IF (&IS_RUN==1)
	(
		PRINT "ARM7 Running"
	)
	ELSE
	(
		PRINT "ARM7 Maybe NOT Running"
	)
)
ELSE
(
	PRINT "ARM7 already Running"
)
ENDDO

SET_DETECT_CORE_IS_RUNING:
	LOCAL &ADDR &TEST_A1 &TEST_V1 &TEST_A2 &TEST_V2
	ENTRY &ADDR &TEST_A1 &TEST_V1 &TEST_A2 &TEST_V2
	
	D.S &MEM_TYPE:(&ADDR+0x0000) %LE %LONG 0xE59F001C
	D.S &MEM_TYPE:(&ADDR+0x0004) %LE %LONG 0xE59F101C
	D.S &MEM_TYPE:(&ADDR+0x0008) %LE %LONG 0xE5801000
	D.S &MEM_TYPE:(&ADDR+0x000C) %LE %LONG 0xE59F0008
	D.S &MEM_TYPE:(&ADDR+0x0010) %LE %LONG 0xE59F1008
	D.S &MEM_TYPE:(&ADDR+0x0014) %LE %LONG 0xE5801000
	D.S &MEM_TYPE:(&ADDR+0x0018) %LE %LONG 0xEAFFFFFE
	D.S &MEM_TYPE:(&ADDR+0x001C) %LE %LONG &TEST_A1
	D.S &MEM_TYPE:(&ADDR+0x0020) %LE %LONG &TEST_V1
	D.S &MEM_TYPE:(&ADDR+0x0024) %LE %LONG &TEST_A2
	D.S &MEM_TYPE:(&ADDR+0x0028) %LE %LONG &TEST_V2
	RETURN
;END SET_DETECT_CORE_IS_RUNING

DETECT_CORE_IS_RUNING:
	LOCAL &TEST_A1 &TEST_V1 &TEST_A2 &TEST_V2 &READ_V1 &READ_V2 &RET
	ENTRY &TEST_A1 &TEST_V1 &TEST_A2 &TEST_V2
	&READ_V1=DATA.LONG(&MEM_TYPE:&TEST_A1)
	&READ_V2=DATA.LONG(&MEM_TYPE:&TEST_A2)
	&RET=0
	IF (&READ_V1==&TEST_V1)
	(
		&RET=1
	)
	IF (&READ_V2==&TEST_V2)
	(
		&RET=1
	)
	RETURN &RET
;END DETECT_CORE_IS_RUNING

SET_WHILE_1:
	LOCAL &ADDR
	ENTRY &ADDR
	D.S &MEM_TYPE:&ADDR %LE %LONG 0xEAFFFFFE
	RETURN
;END SET_WHILE_1
